version: '3.8'

networks:
  elk-net:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
  # logstash_pipeline: # Usaremos config inline ou montaremos depois
  #   driver: local

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0 # Use uma versão compatível
    container_name: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # Ajuste memória se necessário
      - xpack.security.enabled=false # Desabilita segurança para teste
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk-net
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.7.0 # Use uma versão compatível
    container_name: logstash
    volumes:
      # Montaremos a pipeline config abaixo
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
    ports:
      # Porta para receber logs via Beats (Filebeat)
      - "5044:5044"
      # Porta para receber logs via TCP/UDP (ex: GELF)
      - "5000:5000/tcp"
      - "5000:5000/udp"
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx256m" # Ajuste memória
    networks:
      - elk-net
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.0 # Use uma versão compatível
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - "5601:5601" # Porta web do Kibana
    networks:
      - elk-net
    depends_on:
      - elasticsearch
    restart: unless-stopped

